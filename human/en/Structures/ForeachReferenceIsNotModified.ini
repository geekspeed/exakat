name = "Foreach Reference Is Not Modified";
description = "Foreach statement may loop using a reference, especially when the loop has to change values of the array it is looping on. 

In the spotted loop, reference are used but never modified. They may be removed.

<?php

$letters = range('a', 'z');

// $letter is not used here
foreach($letters as &$letter) {
    $alphabet .= $letter;
}

// $letter is actually used here
foreach($letters as &$letter) {
    $letter = strtoupper($letter);
}

?>

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_QUICK";
exakatSince = "0.8.4";

modifications[] = "Remove the reference from the foreach"
modifications[] = "Actually modify the content of the reference"

[example1]
project="Dolibarr"
file="htdocs/product/reassort.php"
line="364"
code="			if($nb_warehouse>1) {
				foreach($warehouses_list as &$wh) {

					print '<td class="right">';
					print empty($product->stock_warehouse[$wh['id']]->real) ? '0' : $product->stock_warehouse[$wh['id']]->real;
					print '</td>';
				}
			}
";
explain="$wh is an array, and is read for its index 'id', but it is not modified. The reference sign is too much."


[example1]
project="Dolibarr"
file="htdocs/product/reassort.php"
line="364"
code="            foreach ($this->_parser->data as &$row) {
                foreach ($row as &$data) {
                    $len = strlen($data);
                    // check if it begins and ends with single quotes
                    // if it does, then it double quotes may not be the enclosure
                    if ($len>=2 && $data[0] == \"'\" && $data[$len-1] == \"'\") {
                        $beginEndWithSingle = true;
                        break;
                    }
                }
                if ($beginEndWithSingle) {
                    break;
                }
                $depth++;
                if ($depth > $this->_max_depth) {
                    break;
                }
            }
";
explain="$data is read for its "
