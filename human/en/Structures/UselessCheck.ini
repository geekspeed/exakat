name = "Useless Check";
description = "Situation where the condition is useless. Foreach() will apply a test on the source, and skip all the loops if no element was found.

<?php

// Checking for type is good. 
if (is_array($array)) {
    foreach($array as $a) {
        doSomething($a);
    }
}

// Foreach on empty arrays doesn't start. Checking is useless
if (!empty($array)) {
    foreach($array as $a) {
        doSomething($a);
    }
}

?>

See also `foreach <http://php.net/manual/en/control-structures.foreach.php>`_.

";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_INSTANT";
exakatSince = "0.8.9";

modifications[] = "Drop the condition and the check"
modifications[] = "Turn the condition into isset(), empty() and is_array()"

[example1]
project="Magento"
file="wp-admin/includes/misc.php"
line="74"
code="        if (!empty($delete)) {
            foreach ($delete as $categoryId) {
                $where = array(
                    'product_id = ?'  => (int)$object->getId(),
                    'category_id = ?' => (int)$categoryId,
                );

                $write->delete($this->_productCategoryTable, $where);
            }
        }
";
explain="This code assumes that $delete is an array, then checks if it empty. Foreach will take care of the empty check."

[example2]
project="Phinx"
file="src/Phinx/Migration/Manager.php"
line="828"
code="    private function getSeedDependenciesInstances(AbstractSeed $seed)
    {
        $dependenciesInstances = [];
        $dependencies = $seed->getDependencies();
        if (!empty($dependencies)) {
            foreach ($dependencies as $dependency) {
                foreach ($this->seeds as $seed) {
                    if (get_class($seed) === $dependency) {
                        $dependenciesInstances[get_class($seed)] = $seed;
                    }
                }
            }
        }

        return $dependenciesInstances;
    }
";
explain="If $dependencies is not empty, foreach() skips the loops."

